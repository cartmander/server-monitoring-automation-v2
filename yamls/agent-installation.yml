trigger: none

pool: IRRNDG-AUTOMATION-POOL

parameters:
  - name: username
    displayName: Username
    type: string
  - name: operation
    displayName: Operation
    type: string
    default: true
    values:
    - Power On Servers
    - Power Off Servers
    - Onboard Servers
    - Power On, Onboard & Power Off Servers

variables:
  - group: SERVER-ONBOARDING-VARS

stages:
- stage: AzureAuthenticationStage
  displayName: Azure Authentication Stage
  jobs:
    displayName: Azure Authentication Job
  - job: AzureAuthenticationJob
    steps:
      - task: PowerShell@2
        displayName: Authenticate with ADM Account
        inputs:
          targetType: inline
          script: |
            az login -u ${{ parameters.username }} -p $(${{ parameters.username }})

- stage: PowerOnServersStage
  displayName: Power On Servers Stage
  dependsOn: AzureAuthenticationStage
  condition: eq('${{ parameters.operation }}', 'Power On Servers')
  jobs:
  - job: PowerOnServersJob
    displayName: Power On Servers Job
    steps:
      - task: PowerShell@2
        displayName: Power On Servers
        inputs:
          targetType: filePath
          filePath: $(System.DefaultWorkingDirectory)/scripts/ProcessCsvData.ps1
          arguments: -operation {{ parameters.operation }}

- stage: OnboardServersStage
  displayName: Onboard Servers Stage
  dependsOn: AzureAuthenticationStage
  condition: eq('${{ parameters.operation }}', 'Onboard Servers')
  jobs:
  - job: OnboardServersJob
    displayName: Onboard Servers Job
    steps:
      - task: CopyFiles@2
        displayName: Copy Run Command Scripts to Virtual Machine
        inputs:
          sourceFolder: $(System.DefaultWorkingDirectory)/scripts/runCommands
          targetFolder: C:/scripts/ServerOnboardingAutomation
          overWrite: true

      - task: PowerShell@2
        displayName: Perform Server Onboarding
        inputs:
          targetType: filePath
          filePath: $(System.DefaultWorkingDirectory)/scripts/ProcessCsvData.ps1
          arguments: -operation {{ parameters.operation }}

- stage: PowerOffServersStage
  displayName: Power Off Servers Stage
  dependsOn: AzureAuthenticationStage
  condition: eq('${{ parameters.operation }}', 'Power Off Servers')
  jobs:
  - job: PowerOffServersJob
    displayName: Power Off Servers Job
    steps:
      - task: PowerShell@2
        displayName: Power Off Servers
        inputs:
          targetType: filePath
          filePath: $(System.DefaultWorkingDirectory)/scripts/ProcessCsvData.ps1
          arguments: -operation {{ parameters.operation }}

- stage: PowerStateOnboardServersStage
  displayName: Power On, Onboard, Power Off Servers Stage
  dependsOn: AzureAuthenticationStage
  condition: eq('${{ parameters.operation }}', 'Power On, Onboard & Power Off Servers')
  jobs:
  - job: PowerStateOnServersJob
    displayName: Power On Servers Job
    steps:
      - task: PowerShell@2
        displayName: Power On Servers
        inputs:
          targetType: filePath
          filePath: $(System.DefaultWorkingDirectory)/scripts/ProcessCsvData.ps1
          arguments: -operation "Power On Servers"

  - job: PowerStateOnboardServersJob
    displayName: Onboard Servers Job
    dependsOn: PowerStateOnServersJob
    steps:
      - task: CopyFiles@2
        displayName: Copy Run Command Scripts to Virtual Machine
        inputs:
          sourceFolder: $(System.DefaultWorkingDirectory)/scripts/runCommands
          targetFolder: C:/scripts/ServerOnboardingAutomation
          overWrite: true

      - task: PowerShell@2
        displayName: Perform Server Onboarding
        inputs:
          targetType: filePath
          filePath: $(System.DefaultWorkingDirectory)/scripts/ProcessCsvData.ps1
          arguments: -operation "Onboard Servers"

  - job: PowerStateOffServersJob
    displayName: Power Off Servers Job
    dependsOn: PowerStateOnboardServersJob
    steps:
      - task: PowerShell@2
        displayName: Power Off Servers
        inputs:
          targetType: filePath
          filePath: $(System.DefaultWorkingDirectory)/scripts/ProcessCsvData.ps1
          arguments: -operation "Power Off Servers"